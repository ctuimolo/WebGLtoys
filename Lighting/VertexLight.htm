<!DOCTYPE html>
<html>
    <head>
        <script id="vertex-shader" type="x-shader/x-vertex">
            attribute vec4 vPosition;
			attribute vec4 vNormal;
			attribute vec3 vColor;
			varying vec3 N, L, E;
			uniform mat4 modelViewMatrix;
			uniform mat4 projectionMatrix;
			uniform vec4 lightPosition;
			varying vec4 color;

            void main() {
				vec3 pos = -(modelViewMatrix * vPosition).xyz;
				vec3 light = lightPosition.xyz;
				L = normalize( light - pos );
				E =  -pos;
				N = normalize( (modelViewMatrix*vNormal).xyz);
				gl_Position = projectionMatrix * modelViewMatrix * vPosition;
				color = vec4(vColor, 1.0);
            }
        </script>

        <script id="fragment-shader" type="x-shader/x-fragment">
            precision mediump float;
		
			uniform vec4 ambientProduct;
			uniform vec4 diffuseProduct;
			uniform vec4 specularProduct;
			uniform float shininess;
			varying vec3 N, L, E;

            varying vec4 color;
			
			uniform float shade;
			
            void main() {
                vec4 fColor;
    
				vec3 H = normalize( L + E );
				vec4 ambient = ambientProduct;
	
				float Kd = max( dot(L, N), 0.0 );
				vec4  diffuse = Kd*diffuseProduct;
	
				float Ks = pow( max(dot(N, H), 0.0), shininess );
				vec4  specular = Ks * specularProduct;
		
				if( dot(L, N) < 0.0 ) specular = vec4(0.0, 0.0, 0.0, 1.0);
	
				fColor = ambient + diffuse +specular;
				fColor.a = 1.0;
	
				if(	shade == 1.0 )
					gl_FragColor = fColor;
				if( shade == 0.0 )
					gl_FragColor = color;
            }
        </script>

        <script type="text/javascript" src="../Common/webgl-utils.js"></script>
        <script type="text/javascript" src="../Common/initShaders.js"></script>
        <script type="text/javascript" src="../Common/math.js"></script>
		<script type="text/javascript" src="../Common/MV.js"></script>
        <script type="text/javascript" src="VertexLight.js"></script>
    </head>
    <body>
        Field of view: <strong>60&deg;</strong> <input id="fovSlider" type="range" min="60" max="100" step="10" value="120"> 
		<strong>120&deg;</strong>
        <br><br>
        <button id= "xButton">Rotate X</button>
        <button id= "yButton">Rotate Y</button>
        <button id= "zButton">Rotate Z</button>
		<button id= "light">Toggle shading</button>
		<br>
	    <button id= "lightxplus">Light X+</button>
        <button id= "lightxminus">Light X-</button>
		<button id= "lightyplus">Light Y+</button>
        <button id= "lightyminus">Light Y-</button>
		<button id= "lightzplus">Light Z+</button>
        <button id= "lightzminus">Light Z-</button>
        <br><br>
        <canvas id="gl-canvas" width="700" height="700">
            Oops ... your browser doesn't support the HTML5 canvas element
        </canvas>
		<br>
		<button id= "resetE">Reset eye</button>
		<button id= "resetG">Reset sphere</button>
		<br><br> 
		<strong>Eye instructions:</strong>
        <br>
        W&S: Look up and down.<br>
        A&D: Look left and right.<br><br>
		<strong>Gasket instructions:</strong>
        <br>
        I&K: Move the gasket along the Z axis.<br>
        J&L: Move the gasket along the X axis.<br>
        Y&H: Move the gasket along the Y axis.<br>
        <br><br>
    </body>
</html>